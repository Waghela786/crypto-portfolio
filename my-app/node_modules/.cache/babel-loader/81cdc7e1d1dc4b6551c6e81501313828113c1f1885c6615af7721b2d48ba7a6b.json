{"ast":null,"code":"var _jsxFileName = \"C:\\\\crypto-portfolio\\\\my-app\\\\src\\\\components\\\\NotificationBell.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BellIcon } from \"lucide-react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NotificationBell({\n  token,\n  userId\n}) {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  // Fetch notifications from backend\n  const fetchNotifications = async () => {\n    try {\n      const res = await axios.get(\"/api/notifications\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Support both array response or { notifications } response\n      const data = res.data.notifications || res.data;\n      setNotifications(data);\n      setUnreadCount(data.filter(n => !n.isRead).length);\n      console.log(\"Fetched notifications:\", data); // Debug\n    } catch (err) {\n      console.error(\"Error fetching notifications:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchNotifications();\n\n    // Socket.IO for real-time notifications\n    const socket = io(\"http://localhost:5000\"); // Replace with backend URL\n    socket.emit(\"identify\", userId); // Send user ID to backend\n\n    socket.on(\"newNotification\", notification => {\n      setNotifications(prev => [notification, ...prev]);\n      setUnreadCount(prev => prev + 1);\n    });\n    return () => socket.disconnect();\n  }, [userId]);\n\n  // Mark a notification as read\n  const markAsRead = async id => {\n    try {\n      await axios.put(`/api/notifications/${id}/read`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(prev => prev.map(n => n._id === id ? {\n        ...n,\n        isRead: true\n      } : n));\n      setUnreadCount(prev => Math.max(prev - 1, 0));\n    } catch (err) {\n      console.error(\"Error marking notification as read:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(BellIcon, {\n      className: \"w-6 h-6 text-gray-700 cursor-pointer\",\n      onClick: () => setShowDropdown(!showDropdown)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"absolute top-0 right-0 bg-red-500 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs border-2 border-white\",\n      children: unreadCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute right-0 mt-2 w-64 bg-white shadow-lg border rounded-md z-50 max-h-64 overflow-y-auto\",\n      children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"p-2 text-sm text-gray-500\",\n        children: \"No notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this) : notifications.map(n => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 text-sm cursor-pointer hover:bg-gray-100 ${!n.isRead ? \"font-bold bg-gray-50\" : \"\"}`,\n        onClick: () => markAsRead(n._id),\n        children: n.message\n      }, n._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(NotificationBell, \"sqKfwGOhj9xhUn+OWyji7ePUBmI=\");\n_c = NotificationBell;\nvar _c;\n$RefreshReg$(_c, \"NotificationBell\");","map":{"version":3,"names":["useState","useEffect","axios","BellIcon","io","jsxDEV","_jsxDEV","NotificationBell","token","userId","_s","notifications","setNotifications","unreadCount","setUnreadCount","showDropdown","setShowDropdown","fetchNotifications","res","get","headers","Authorization","data","filter","n","isRead","length","console","log","err","error","socket","emit","on","notification","prev","disconnect","markAsRead","id","put","map","_id","Math","max","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["C:/crypto-portfolio/my-app/src/components/NotificationBell.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BellIcon } from \"lucide-react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport default function NotificationBell({ token, userId }) {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  // Fetch notifications from backend\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/notifications\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      // Support both array response or { notifications } response\r\n      const data = res.data.notifications || res.data;\r\n      setNotifications(data);\r\n      setUnreadCount(data.filter(n => !n.isRead).length);\r\n      console.log(\"Fetched notifications:\", data); // Debug\r\n    } catch (err) {\r\n      console.error(\"Error fetching notifications:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n\r\n    // Socket.IO for real-time notifications\r\n    const socket = io(\"http://localhost:5000\"); // Replace with backend URL\r\n    socket.emit(\"identify\", userId); // Send user ID to backend\r\n\r\n    socket.on(\"newNotification\", (notification) => {\r\n      setNotifications(prev => [notification, ...prev]);\r\n      setUnreadCount(prev => prev + 1);\r\n    });\r\n\r\n    return () => socket.disconnect();\r\n  }, [userId]);\r\n\r\n  // Mark a notification as read\r\n  const markAsRead = async (id) => {\r\n    try {\r\n      await axios.put(`/api/notifications/${id}/read`, {}, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      setNotifications(prev => prev.map(n => n._id === id ? { ...n, isRead: true } : n));\r\n      setUnreadCount(prev => Math.max(prev - 1, 0));\r\n    } catch (err) {\r\n      console.error(\"Error marking notification as read:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      {/* Bell Icon */}\r\n      <BellIcon\r\n        className=\"w-6 h-6 text-gray-700 cursor-pointer\"\r\n        onClick={() => setShowDropdown(!showDropdown)}\r\n      />\r\n\r\n      {/* Unread Badge */}\r\n      {unreadCount > 0 && (\r\n        <span className=\"absolute top-0 right-0 bg-red-500 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs border-2 border-white\">\r\n          {unreadCount}\r\n        </span>\r\n      )}\r\n\r\n      {/* Dropdown List */}\r\n      {showDropdown && (\r\n        <div className=\"absolute right-0 mt-2 w-64 bg-white shadow-lg border rounded-md z-50 max-h-64 overflow-y-auto\">\r\n          {notifications.length === 0 ? (\r\n            <p className=\"p-2 text-sm text-gray-500\">No notifications</p>\r\n          ) : (\r\n            notifications.map(n => (\r\n              <div\r\n                key={n._id}\r\n                className={`p-2 text-sm cursor-pointer hover:bg-gray-100 ${\r\n                  !n.isRead ? \"font-bold bg-gray-50\" : \"\"\r\n                }`}\r\n                onClick={() => markAsRead(n._id)}\r\n              >\r\n                {n.message}\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,cAAc;AACvC,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,gBAAgBA,CAAC;EAAEC,KAAK;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACA,MAAMiB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,oBAAoB,EAAE;QAChDC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUb,KAAK;QAAG;MAC9C,CAAC,CAAC;;MAEF;MACA,MAAMc,IAAI,GAAGJ,GAAG,CAACI,IAAI,CAACX,aAAa,IAAIO,GAAG,CAACI,IAAI;MAC/CV,gBAAgB,CAACU,IAAI,CAAC;MACtBR,cAAc,CAACQ,IAAI,CAACC,MAAM,CAACC,CAAC,IAAI,CAACA,CAAC,CAACC,MAAM,CAAC,CAACC,MAAM,CAAC;MAClDC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEN,IAAI,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZF,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAED,GAAG,CAAC;IACrD;EACF,CAAC;EAED5B,SAAS,CAAC,MAAM;IACdgB,kBAAkB,CAAC,CAAC;;IAEpB;IACA,MAAMc,MAAM,GAAG3B,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;IAC5C2B,MAAM,CAACC,IAAI,CAAC,UAAU,EAAEvB,MAAM,CAAC,CAAC,CAAC;;IAEjCsB,MAAM,CAACE,EAAE,CAAC,iBAAiB,EAAGC,YAAY,IAAK;MAC7CtB,gBAAgB,CAACuB,IAAI,IAAI,CAACD,YAAY,EAAE,GAAGC,IAAI,CAAC,CAAC;MACjDrB,cAAc,CAACqB,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAClC,CAAC,CAAC;IAEF,OAAO,MAAMJ,MAAM,CAACK,UAAU,CAAC,CAAC;EAClC,CAAC,EAAE,CAAC3B,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAM4B,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/B,IAAI;MACF,MAAMpC,KAAK,CAACqC,GAAG,CAAC,sBAAsBD,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE;QACnDlB,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUb,KAAK;QAAG;MAC9C,CAAC,CAAC;MAEFI,gBAAgB,CAACuB,IAAI,IAAIA,IAAI,CAACK,GAAG,CAAChB,CAAC,IAAIA,CAAC,CAACiB,GAAG,KAAKH,EAAE,GAAG;QAAE,GAAGd,CAAC;QAAEC,MAAM,EAAE;MAAK,CAAC,GAAGD,CAAC,CAAC,CAAC;MAClFV,cAAc,CAACqB,IAAI,IAAIO,IAAI,CAACC,GAAG,CAACR,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC,OAAON,GAAG,EAAE;MACZF,OAAO,CAACG,KAAK,CAAC,qCAAqC,EAAED,GAAG,CAAC;IAC3D;EACF,CAAC;EAED,oBACEvB,OAAA;IAAKsC,SAAS,EAAC,UAAU;IAAAC,QAAA,gBAEvBvC,OAAA,CAACH,QAAQ;MACPyC,SAAS,EAAC,sCAAsC;MAChDE,OAAO,EAAEA,CAAA,KAAM9B,eAAe,CAAC,CAACD,YAAY;IAAE;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,EAGDrC,WAAW,GAAG,CAAC,iBACdP,OAAA;MAAMsC,SAAS,EAAC,kIAAkI;MAAAC,QAAA,EAC/IhC;IAAW;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACP,EAGAnC,YAAY,iBACXT,OAAA;MAAKsC,SAAS,EAAC,+FAA+F;MAAAC,QAAA,EAC3GlC,aAAa,CAACe,MAAM,KAAK,CAAC,gBACzBpB,OAAA;QAAGsC,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAE7DvC,aAAa,CAAC6B,GAAG,CAAChB,CAAC,iBACjBlB,OAAA;QAEEsC,SAAS,EAAE,gDACT,CAACpB,CAAC,CAACC,MAAM,GAAG,sBAAsB,GAAG,EAAE,EACtC;QACHqB,OAAO,EAAEA,CAAA,KAAMT,UAAU,CAACb,CAAC,CAACiB,GAAG,CAAE;QAAAI,QAAA,EAEhCrB,CAAC,CAAC2B;MAAO,GANL3B,CAAC,CAACiB,GAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOP,CACN;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxC,EAAA,CAxFuBH,gBAAgB;AAAA6C,EAAA,GAAhB7C,gBAAgB;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}