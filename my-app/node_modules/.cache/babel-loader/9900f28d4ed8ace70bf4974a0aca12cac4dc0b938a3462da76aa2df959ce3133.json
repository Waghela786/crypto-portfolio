{"ast":null,"code":"import axios from \"axios\";\n\n// Create API instance for your backend\nconst API = axios.create({\n  baseURL: \"http://localhost:5000/api\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Create separate instance for CoinGecko\nexport const coinGeckoAPI = axios.create({\n  baseURL: \"https://api.coingecko.com/api/v3\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Add response interceptor\nAPI.interceptors.response.use(response => response, error => {\n  console.error(\"API Error:\", error);\n  return Promise.reject(error);\n});\nexport default API;\nexport const fetchCoinsList = async () => {\n  try {\n    const res = await axios.get(\"https://api.coingecko.com/api/v3/coins/list\");\n    return res.data; // array of { id, symbol, name }\n  } catch (err) {\n    console.error(\"Error fetching coins list:\", err);\n    return [];\n  }\n};","map":{"version":3,"names":["axios","API","create","baseURL","headers","coinGeckoAPI","interceptors","response","use","error","console","Promise","reject","fetchCoinsList","res","get","data","err"],"sources":["C:/Users/waghe/Desktop/crypto-portfolio/my-app/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Create API instance for your backend\r\nconst API = axios.create({\r\n  baseURL: \"http://localhost:5000/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Create separate instance for CoinGecko\r\nexport const coinGeckoAPI = axios.create({\r\n  baseURL: \"https://api.coingecko.com/api/v3\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Add response interceptor\r\nAPI.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    console.error(\"API Error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default API;\r\nexport const fetchCoinsList = async () => {\r\n  try {\r\n    const res = await axios.get(\"https://api.coingecko.com/api/v3/coins/list\");\r\n    return res.data; // array of { id, symbol, name }\r\n  } catch (err) {\r\n    console.error(\"Error fetching coins list:\", err);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,YAAY,GAAGL,KAAK,CAACE,MAAM,CAAC;EACvCC,OAAO,EAAE,kCAAkC;EAC3CC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EACTC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeR,GAAG;AAClB,OAAO,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,6CAA6C,CAAC;IAC1E,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZP,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEQ,GAAG,CAAC;IAChD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}