{"ast":null,"code":"import axios from \"axios\";\n\n// Use REACT_APP_API_URL when set (useful for ngrok/public URLs), otherwise default to backend on same host:\n// If frontend is opened from mobile at http://<your-pc-ip>:3001, this will point to http://<your-pc-ip>:5000/api\nconst DEFAULT_BACKEND_PORT = 5000;\nconst makeFallbackBase = () => {\n  if (typeof window === \"undefined\") return `http://localhost:${DEFAULT_BACKEND_PORT}/api`;\n  const {\n    protocol,\n    hostname\n  } = window.location;\n  // if hostname is empty fallback to localhost\n  const host = hostname || \"localhost\";\n  return `${protocol}//${host}:${DEFAULT_BACKEND_PORT}/api`;\n};\nconst BASE_URL = process.env.REACT_APP_API_URL || makeFallbackBase();\nconst API = axios.create({\n  baseURL: BASE_URL\n});\nexport default API;\nexport const fetchCoinsList = async () => {\n  try {\n    const res = await axios.get(\"https://api.coingecko.com/api/v3/coins/list\");\n    return res.data; // array of { id, symbol, name }\n  } catch (err) {\n    console.error(\"Error fetching coins list:\", err);\n    return [];\n  }\n};","map":{"version":3,"names":["axios","DEFAULT_BACKEND_PORT","makeFallbackBase","window","protocol","hostname","location","host","BASE_URL","process","env","REACT_APP_API_URL","API","create","baseURL","fetchCoinsList","res","get","data","err","console","error"],"sources":["C:/crypto-portfolio/my-app/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Use REACT_APP_API_URL when set (useful for ngrok/public URLs), otherwise default to backend on same host:\r\n// If frontend is opened from mobile at http://<your-pc-ip>:3001, this will point to http://<your-pc-ip>:5000/api\r\nconst DEFAULT_BACKEND_PORT = 5000;\r\nconst makeFallbackBase = () => {\r\n  if (typeof window === \"undefined\") return `http://localhost:${DEFAULT_BACKEND_PORT}/api`;\r\n  const { protocol, hostname } = window.location;\r\n  // if hostname is empty fallback to localhost\r\n  const host = hostname || \"localhost\";\r\n  return `${protocol}//${host}:${DEFAULT_BACKEND_PORT}/api`;\r\n};\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_URL || makeFallbackBase();\r\n\r\nconst API = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\nexport default API;\r\nexport const fetchCoinsList = async () => {\r\n  try {\r\n    const res = await axios.get(\"https://api.coingecko.com/api/v3/coins/list\");\r\n    return res.data; // array of { id, symbol, name }\r\n  } catch (err) {\r\n    console.error(\"Error fetching coins list:\", err);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA,MAAMC,oBAAoB,GAAG,IAAI;AACjC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE,OAAO,oBAAoBF,oBAAoB,MAAM;EACxF,MAAM;IAAEG,QAAQ;IAAEC;EAAS,CAAC,GAAGF,MAAM,CAACG,QAAQ;EAC9C;EACA,MAAMC,IAAI,GAAGF,QAAQ,IAAI,WAAW;EACpC,OAAO,GAAGD,QAAQ,KAAKG,IAAI,IAAIN,oBAAoB,MAAM;AAC3D,CAAC;AAED,MAAMO,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAIT,gBAAgB,CAAC,CAAC;AAEpE,MAAMU,GAAG,GAAGZ,KAAK,CAACa,MAAM,CAAC;EACvBC,OAAO,EAAEN;AACX,CAAC,CAAC;AAEF,eAAeI,GAAG;AAClB,OAAO,MAAMG,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,6CAA6C,CAAC;IAC1E,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAChD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}