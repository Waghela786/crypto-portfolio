{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\waghe\\\\Desktop\\\\crypto-portfolio\\\\my-app\\\\src\\\\components\\\\NotificationBell.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport API from \"../services/api\";\nimport { Bell as BellIcon } from \"lucide-react\";\nimport { io } from \"socket.io-client\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NotificationBell({\n  token,\n  userId\n}) {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const tokenLocal = token || localStorage.getItem(\"token\");\n    if (!tokenLocal) return;\n    let socket;\n    const connectSocket = () => {\n      const backendOrigin = (API.defaults.baseURL || \"http://localhost:5000\").replace(/\\/api\\/?$/, \"\");\n      socket = io(backendOrigin, {\n        reconnection: true,\n        reconnectionDelay: 1000,\n        reconnectionDelayMax: 5000,\n        reconnectionAttempts: 5\n      });\n      socket.on('connect_error', error => {\n        console.error('Socket connection error:', error);\n      });\n      socket.on('disconnect', reason => {\n        console.log('Socket disconnected:', reason);\n        if (reason === 'io server disconnect') {\n          // reconnect if server disconnected\n          socket.connect();\n        }\n      });\n      socket.on(\"connect\", () => {\n        let uid = userId;\n        if (!uid) {\n          try {\n            const storedUser = localStorage.getItem(\"user\");\n            uid = storedUser ? JSON.parse(storedUser)._id : null;\n          } catch {\n            uid = null;\n          }\n        }\n        if (uid) socket.emit(\"identify\", uid);\n      });\n      socket.on(\"newNotification\", notification => {\n        setNotifications(prev => [notification, ...prev]);\n        setUnreadCount(prev => prev + 1);\n      });\n    };\n    connectSocket();\n    return () => {\n      if (socket) {\n        socket.off('connect_error');\n        socket.off('disconnect');\n        socket.off('connect');\n        socket.off('newNotification');\n        socket.disconnect();\n      }\n    };\n  }, [token, userId]);\n\n  // Mark a notification as read and redirect\n  const handleNotificationClick = async notification => {\n    try {\n      await API.put(`/notifications/${notification._id}/read`, null, {\n        headers: {\n          Authorization: `Bearer ${token || localStorage.getItem(\"token\")}`\n        }\n      });\n      setNotifications(prev => prev.map(n => n._id === notification._id ? {\n        ...n,\n        isRead: true\n      } : n));\n      setUnreadCount(prev => Math.max(0, prev - 1));\n\n      // Redirect to transaction page after marking as read\n      navigate(\"/transactions\");\n    } catch (err) {\n      console.error(\"Error marking notification as read:\", err);\n    }\n  };\n\n  // When bell icon is clicked, toggle dropdown OR go to /transactions\n  const handleBellClick = () => {\n    if (notifications.length === 0) {\n      // If no notifications, just go to transactions page\n      navigate(\"/transactions\");\n    } else {\n      // Toggle dropdown to show list\n      setShowDropdown(prev => !prev);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(BellIcon, {\n      className: \"w-6 h-6 text-gray-700 cursor-pointer\",\n      onClick: handleBellClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"absolute top-0 right-0 bg-red-500 text-white rounded-full w-4 h-4 flex items-center justify-center text-xs\",\n      children: unreadCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute right-0 mt-2 w-64 bg-white shadow-lg border rounded-md z-50 max-h-64 overflow-y-auto\",\n      children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"p-2 text-sm text-gray-500\",\n        children: \"No notifications yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this) : notifications.map(n => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 text-sm cursor-pointer hover:bg-gray-100 ${!n.isRead ? \"font-bold bg-gray-50\" : \"\"}`,\n        onClick: () => handleNotificationClick(n),\n        children: n.message\n      }, n._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(NotificationBell, \"s4BJPM4nuixInbDDr84iTa9M2Tk=\", false, function () {\n  return [useNavigate];\n});\n_c = NotificationBell;\nvar _c;\n$RefreshReg$(_c, \"NotificationBell\");","map":{"version":3,"names":["useState","useEffect","API","Bell","BellIcon","io","useNavigate","jsxDEV","_jsxDEV","NotificationBell","token","userId","_s","notifications","setNotifications","unreadCount","setUnreadCount","showDropdown","setShowDropdown","navigate","tokenLocal","localStorage","getItem","socket","connectSocket","backendOrigin","defaults","baseURL","replace","reconnection","reconnectionDelay","reconnectionDelayMax","reconnectionAttempts","on","error","console","reason","log","connect","uid","storedUser","JSON","parse","_id","emit","notification","prev","off","disconnect","handleNotificationClick","put","headers","Authorization","map","n","isRead","Math","max","err","handleBellClick","length","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["C:/Users/waghe/Desktop/crypto-portfolio/my-app/src/components/NotificationBell.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport API from \"../services/api\";\r\nimport { Bell as BellIcon } from \"lucide-react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function NotificationBell({ token, userId }) {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const tokenLocal = token || localStorage.getItem(\"token\");\r\n    if (!tokenLocal) return;\r\n\r\n    let socket;\r\n    \r\n    const connectSocket = () => {\r\n      const backendOrigin = (API.defaults.baseURL || \"http://localhost:5000\").replace(/\\/api\\/?$/, \"\");\r\n      socket = io(backendOrigin, {\r\n        reconnection: true,\r\n        reconnectionDelay: 1000,\r\n        reconnectionDelayMax: 5000,\r\n        reconnectionAttempts: 5\r\n      });\r\n\r\n      socket.on('connect_error', (error) => {\r\n        console.error('Socket connection error:', error);\r\n      });\r\n\r\n      socket.on('disconnect', (reason) => {\r\n        console.log('Socket disconnected:', reason);\r\n        if (reason === 'io server disconnect') {\r\n          // reconnect if server disconnected\r\n          socket.connect();\r\n        }\r\n      });\r\n\r\n      socket.on(\"connect\", () => {\r\n        let uid = userId;\r\n        if (!uid) {\r\n          try {\r\n            const storedUser = localStorage.getItem(\"user\");\r\n            uid = storedUser ? JSON.parse(storedUser)._id : null;\r\n          } catch {\r\n            uid = null;\r\n          }\r\n        }\r\n        if (uid) socket.emit(\"identify\", uid);\r\n      });\r\n\r\n      socket.on(\"newNotification\", (notification) => {\r\n        setNotifications((prev) => [notification, ...prev]);\r\n        setUnreadCount((prev) => prev + 1);\r\n      });\r\n    };\r\n\r\n    connectSocket();\r\n\r\n    return () => {\r\n      if (socket) {\r\n        socket.off('connect_error');\r\n        socket.off('disconnect');\r\n        socket.off('connect');\r\n        socket.off('newNotification');\r\n        socket.disconnect();\r\n      }\r\n    };\r\n  }, [token, userId]);\r\n\r\n  // Mark a notification as read and redirect\r\n  const handleNotificationClick = async (notification) => {\r\n    try {\r\n      await API.put(`/notifications/${notification._id}/read`, null, {\r\n        headers: { Authorization: `Bearer ${token || localStorage.getItem(\"token\")}` },\r\n      });\r\n      setNotifications((prev) =>\r\n        prev.map((n) => (n._id === notification._id ? { ...n, isRead: true } : n))\r\n      );\r\n      setUnreadCount((prev) => Math.max(0, prev - 1));\r\n\r\n      // Redirect to transaction page after marking as read\r\n      navigate(\"/transactions\");\r\n    } catch (err) {\r\n      console.error(\"Error marking notification as read:\", err);\r\n    }\r\n  };\r\n\r\n  // When bell icon is clicked, toggle dropdown OR go to /transactions\r\n  const handleBellClick = () => {\r\n    if (notifications.length === 0) {\r\n      // If no notifications, just go to transactions page\r\n      navigate(\"/transactions\");\r\n    } else {\r\n      // Toggle dropdown to show list\r\n      setShowDropdown((prev) => !prev);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      {/* Bell Icon */}\r\n      <BellIcon\r\n        className=\"w-6 h-6 text-gray-700 cursor-pointer\"\r\n        onClick={handleBellClick}\r\n      />\r\n\r\n      {/* Unread Badge */}\r\n      {unreadCount > 0 && (\r\n        <span className=\"absolute top-0 right-0 bg-red-500 text-white rounded-full w-4 h-4 flex items-center justify-center text-xs\">\r\n          {unreadCount}\r\n        </span>\r\n      )}\r\n\r\n      {/* Dropdown List */}\r\n      {showDropdown && (\r\n        <div className=\"absolute right-0 mt-2 w-64 bg-white shadow-lg border rounded-md z-50 max-h-64 overflow-y-auto\">\r\n          {notifications.length === 0 ? (\r\n            <p className=\"p-2 text-sm text-gray-500\">No notifications yet</p>\r\n          ) : (\r\n            notifications.map((n) => (\r\n              <div\r\n                key={n._id}\r\n                className={`p-2 text-sm cursor-pointer hover:bg-gray-100 ${\r\n                  !n.isRead ? \"font-bold bg-gray-50\" : \"\"\r\n                }`}\r\n                onClick={() => handleNotificationClick(n)}\r\n              >\r\n                {n.message}\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}